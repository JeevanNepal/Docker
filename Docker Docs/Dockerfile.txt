This is a code of a simple webapp which will be used to run the app in the browser.

import os
from flask import Flask
app = Flask(__name__)

@app.route("/")
def main():
    return "Welcome!"

@app.route('/how are you')
def hello():
    return 'I am good, how about you?'

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)


    


    How to dockerize an application?
    yum update 
    yum install python
    yum install -y python pip
    Create/copy application code to /opt/app.py

    Run: FLASK_APP=app.py flask run --host=0.0.0.0

    > create a directory
    > create a file inside the directory eg, my-simple-webapp.
    > paste the source code of the webapp inside the file.

    Now, we need to run the doocker build command.
    type: docker build .  , it will start to buil the image.

    What is a docker file?
    Docker file is a simple file with instructions to build an image.
    It is an automation of docker image creation.

    Important instructions for docker:
    FROM
    RUN
    CMD

    
    Steps:
    
    How to build an image from docker file?
    1. Create a file named Dockerfile.
    2. Get inside the directory, e.i, Dockerfiles and create an empty file here using touch command: touch Dockerfile.
    3. Type vim Dockerfile to edit the file, it leads us to an insert mode. Type "i" to be in insert mode in VM editor.
    4. Add instructions to docker file, : FROM, RUN CMD.
    5. Build docker file to create image: docker build . {(.) it reprents that the file is in the desired directory}.
    6. Run image to create container: docker run (image ID need to be provided).


    If the output is shown than the docker image is created successfully and it is ran as well.

Environment Variables:
docker run -e App_COLOR=blue simple-webapp-color
we can use the above code to change the backgroung color of the apllication.


How to find environment variable set on a container that's alerady running?
Use the docker inspect command to inspect the properties of a running container: docker inspect blessful_hopper.
Under the config section, we can find the list of environment variables set on the container.


    